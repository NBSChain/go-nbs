// Code generated by protoc-gen-go. DO NOT EDIT.
// source: merkledag.proto

package merkledag_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PBLink struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Tsize                int64    `protobuf:"varint,3,opt,name=Tsize,proto3" json:"Tsize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBLink) Reset()         { *m = PBLink{} }
func (m *PBLink) String() string { return proto.CompactTextString(m) }
func (*PBLink) ProtoMessage()    {}
func (*PBLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_10837cc3557cec00, []int{0}
}

func (m *PBLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBLink.Unmarshal(m, b)
}
func (m *PBLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBLink.Marshal(b, m, deterministic)
}
func (m *PBLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBLink.Merge(m, src)
}
func (m *PBLink) XXX_Size() int {
	return xxx_messageInfo_PBLink.Size(m)
}
func (m *PBLink) XXX_DiscardUnknown() {
	xxx_messageInfo_PBLink.DiscardUnknown(m)
}

var xxx_messageInfo_PBLink proto.InternalMessageInfo

func (m *PBLink) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *PBLink) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PBLink) GetTsize() int64 {
	if m != nil {
		return m.Tsize
	}
	return 0
}

type PBNode struct {
	Links                []*PBLink `protobuf:"bytes,2,rep,name=Links,proto3" json:"Links,omitempty"`
	Data                 []byte    `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PBNode) Reset()         { *m = PBNode{} }
func (m *PBNode) String() string { return proto.CompactTextString(m) }
func (*PBNode) ProtoMessage()    {}
func (*PBNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_10837cc3557cec00, []int{1}
}

func (m *PBNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBNode.Unmarshal(m, b)
}
func (m *PBNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBNode.Marshal(b, m, deterministic)
}
func (m *PBNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBNode.Merge(m, src)
}
func (m *PBNode) XXX_Size() int {
	return xxx_messageInfo_PBNode.Size(m)
}
func (m *PBNode) XXX_DiscardUnknown() {
	xxx_messageInfo_PBNode.DiscardUnknown(m)
}

var xxx_messageInfo_PBNode proto.InternalMessageInfo

func (m *PBNode) GetLinks() []*PBLink {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *PBNode) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*PBLink)(nil), "merkledag.pb.PBLink")
	proto.RegisterType((*PBNode)(nil), "merkledag.pb.PBNode")
}

func init() { proto.RegisterFile("merkledag.proto", fileDescriptor_10837cc3557cec00) }

var fileDescriptor_10837cc3557cec00 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcf, 0x4d, 0x2d, 0xca,
	0xce, 0x49, 0x4d, 0x49, 0x4c, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x41, 0x12, 0x48,
	0x52, 0x72, 0xe3, 0x62, 0x0b, 0x70, 0xf2, 0xc9, 0xcc, 0xcb, 0x16, 0x12, 0xe2, 0x62, 0xf1, 0x48,
	0x2c, 0xce, 0x90, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x09, 0x02, 0xb3, 0x41, 0x62, 0x7e, 0x89, 0xb9,
	0xa9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x90, 0x08, 0x17, 0x6b, 0x48, 0x71,
	0x66, 0x55, 0xaa, 0x04, 0xb3, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x84, 0xa3, 0xe4, 0x01, 0x32, 0xc7,
	0x2f, 0x3f, 0x25, 0x55, 0x48, 0x8b, 0x8b, 0x15, 0x64, 0x5e, 0xb1, 0x04, 0x93, 0x02, 0xb3, 0x06,
	0xb7, 0x91, 0x88, 0x1e, 0xb2, 0x7d, 0x7a, 0x10, 0xcb, 0x82, 0x20, 0x4a, 0x40, 0xe6, 0xbb, 0x24,
	0x96, 0x24, 0xc2, 0xec, 0x04, 0xb1, 0x93, 0xd8, 0xc0, 0xce, 0x34, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x25, 0x91, 0xc8, 0x28, 0xb9, 0x00, 0x00, 0x00,
}
