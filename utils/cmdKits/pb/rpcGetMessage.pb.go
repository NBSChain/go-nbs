// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpcGetMessage.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRequest struct {
	CmdName              string   `protobuf:"bytes,1,opt,name=cmdName,proto3" json:"cmdName,omitempty"`
	Args                 []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpcGetMessage_37d52ece13f8079a, []int{0}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetCmdName() string {
	if m != nil {
		return m.CmdName
	}
	return ""
}

func (m *GetRequest) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type GetResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_rpcGetMessage_37d52ece13f8079a, []int{1}
}
func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (dst *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(dst, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "pb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "pb.GetResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GetTaskClient is the client API for GetTask service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetTaskClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type getTaskClient struct {
	cc *grpc.ClientConn
}

func NewGetTaskClient(cc *grpc.ClientConn) GetTaskClient {
	return &getTaskClient{cc}
}

func (c *getTaskClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/pb.GetTask/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetTaskServer is the server API for GetTask service.
type GetTaskServer interface {
	Get(context.Context, *GetRequest) (*GetResponse, error)
}

func RegisterGetTaskServer(s *grpc.Server, srv GetTaskServer) {
	s.RegisterService(&_GetTask_serviceDesc, srv)
}

func _GetTask_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetTaskServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.GetTask/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetTaskServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetTask_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.GetTask",
	HandlerType: (*GetTaskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _GetTask_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpcGetMessage.proto",
}

func init() { proto.RegisterFile("rpcGetMessage.proto", fileDescriptor_rpcGetMessage_37d52ece13f8079a) }

var fileDescriptor_rpcGetMessage_37d52ece13f8079a = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x41, 0x4b, 0x87, 0x40,
	0x10, 0x47, 0xf3, 0xff, 0x8f, 0xc4, 0x89, 0x0a, 0xb6, 0x8b, 0x04, 0x81, 0x78, 0xc9, 0xd3, 0x10,
	0x79, 0xeb, 0xe8, 0x65, 0x0f, 0x51, 0xc4, 0xd2, 0x17, 0xd8, 0x5d, 0x07, 0x91, 0x5a, 0x77, 0x73,
	0xc6, 0xef, 0x1f, 0x69, 0x56, 0xb7, 0x79, 0x87, 0xf7, 0x1b, 0x1e, 0x5c, 0xcf, 0xc9, 0x6b, 0x92,
	0x67, 0x62, 0xb6, 0x03, 0x61, 0x9a, 0xa3, 0x44, 0x75, 0x48, 0xae, 0x7e, 0x04, 0xd0, 0x24, 0x86,
	0x3e, 0x17, 0x62, 0x51, 0x25, 0xe4, 0x3e, 0xf4, 0x2f, 0x36, 0x50, 0x99, 0x55, 0x59, 0x53, 0x98,
	0x1d, 0x95, 0x82, 0x53, 0x3b, 0x0f, 0x5c, 0x1e, 0xaa, 0x63, 0x53, 0x98, 0xf5, 0xae, 0xef, 0xe0,
	0x7c, 0x75, 0x39, 0xc5, 0x89, 0xe9, 0x5b, 0x0e, 0xdb, 0xfe, 0x2e, 0xff, 0xe0, 0x43, 0x0b, 0xb9,
	0x26, 0x79, 0xb3, 0xfc, 0xae, 0x1a, 0x38, 0x6a, 0x12, 0x75, 0x89, 0xc9, 0xe1, 0xdf, 0xe3, 0x9b,
	0xab, 0x5f, 0xde, 0xc6, 0xea, 0x93, 0xee, 0x1e, 0x6e, 0x7d, 0x0c, 0x38, 0x39, 0xc6, 0x29, 0xf6,
	0x84, 0x8b, 0x8c, 0x1f, 0x8c, 0x3e, 0xf4, 0x4f, 0xa3, 0x30, 0x26, 0xd7, 0x5d, 0x98, 0xff, 0x4d,
	0xaf, 0x99, 0x3b, 0x5b, 0xb3, 0xda, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdc, 0xa1, 0x06, 0xfb,
	0xed, 0x00, 0x00, 0x00,
}
